


   Рекурсия 
   Дано натуральное число n. Напишите рекурсивную функцию, которая возвращает строку чисел от 1 до n, разделенных пробелом.

		function my_function(n) {
		if (n == 1) return 1;
		else {
		return my_function(n-1) + ' ' + n; // Данный способ выводит результаты Рекурсии в обратном порядке. С конца в начало.
		}  
		


		Расчет суммы символом 2х строк 
		
		function testStr(a, b) 
		{
    return (a.length + b.length);
		};
		
		
		В этом задании в нашу функцию testStr первым параметром передается строка (переменная str), а вторым - число (переменная n) . 
		Вам нужно вернуть из функции символ строки , порядковый номер которого указан в переданном в функцию числе.
		
		function testStr(str, n) {
		return str.charAt(n-1);

		}
		
		
		
		В этом задании в нашу функцию testStr передаются две строки. 
		Вам нужно вернуть из функции строку, которая будет включать в себя обе этих строки, преобразовав в первой строке все буквы в заглавные, а во второй - в строчные.
		
		function testStr(a, b) {

		return a.toUpperCase().concat(b.toLowerCase());
		}
		
		
		
		В этом задании в нашу функцию testStr передаются две строки. 
		Вам нужно вернуть индекс позиции, с которой начинается вхождение второй строки в первую.
		
		function testStr(a, b) {

		return a.indexOf(b,0);
		}
		
		
		В этом задании в нашу функцию testArray передаются два массива случайной длины заполненные случайными числами. 
		Вам нужно сосчитать сумму всех элементов обоих массивов и возвратить ее из функции.
		
		function testArray(a, b) {							
		var x=0;
		var z=0;
		for( let i=0;i<=a.length-1;i++)
		{  x += a[i];
		}
		for( let i=0;i<=b.length-1;i++)
		{  z += b[i];
		}
		return x+z;
		}
		
		2ОЙ Вариант 
		function testArray(a, b) {
		let sum = 0;
		for(let x of a) sum += x;
		for(let x of b) sum += x;
		return sum;
		}
		
		
		
		В этом задании в нашу функцию testArray передаются две строки случайной длины и содержания. 
		Вам нужно составить из символов этих строк один массив (каждый символ строки становится отдельным элементом массива), 
		затем добавить первым элементом  массива текстовое значение "Иванов", и вернуть из функции все элементы в обратном порядке, преобразовав в строку. Обратите внимание, что в обратном порядке нужно переставить элементы внутри массива, а данные внутри элементов инвертировать не нужно!
		
		function testArray(a, b) {
			var x = a.concat(b); //Обьединяем строки
			var c = x.split(""); // Разтеляем каждое значение в строке и записываем в массив
			var z = c.unshift("Иванов");  // Добавляем в начало масссива значение 		
			var rev = c.reverse();  // Инвертируем массив
			var j = rev.join("");   // Обединяем получившееся значение в строку
			return j;
		}


		В этом задании в нашу функцию testDateTime передаются две строки вида "03 November 2017 04:17".
		Вам нужно превратить строки в даты, сравнить их. Для той, что больше получить день недели и вернуть его из функции.

		Название дня недели должно быть по-русски, с большой буквы, например: "Понедельник".
			
			
			function testDateTime(a, b) {
    var Date1 = new Date(a);
    var Date2 = new Date(b);
    if(+Date1 > +Date2)
    var x = Date1.getDay();
    else 
    var y = Date2.getDay();
     if (x==0 ||y==0)
         return ("Воскресенье");
    if (x==1 ||y==1)
        return ("Понедельник");
        if (x==2 ||y==2)
            return ("Вторник");
            if (x==3 ||y==3)
                return ("Среда");
                if (x==4 ||y==4)
                    return ("Четверг");
                    if (x==5 ||y==5)
                        return ("Пятница");
                        if (x==6 ||y==6)
                            return ("Суббота");
    
		2ой вариант через массив 
		
		function testDateTime(a, b) {
		let date1 = new Date(a);
		let date2 = new Date(b);
		let daysArr = ["Воскресенье", "Понедельник", "Вторник", "Среда", "Четверг", "Пятница", "Суббота"];
		if (date1 > date2)
        return daysArr[date1.getDay()];
		else
        return daysArr[date2.getDay()];
}
}



		В этом задании в нашу функцию testRegExp первым параметром передается случайная строка(переменная s), а вторым - случайная подстрока(переменная sub_s), которую нужно использовать в качестве шаблона регулярного выражения. 
		Вам нужно вернуть из функции строку, в которой будут перечислены через запятую все совпадения шаблона с первой строкой.
		
		function testRegExp(s, sub_s) {
 
		var myPattern = new RegExp(sub_s,"g"); // Создаем шаблон, находящий sub_s с флагом глобального поиска "g"
		var myString = s;
		result = myString.match(myPattern); //ищем соответствия методом match
		return result.join();   // обьединяем в массив и выводим через запятую
   
		}
